name: FEniCS

on:
  push:
    branches:
      - master
  pull_request:

jobs:

  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Setup Miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: 3.8

      - name: Conda info
        shell: bash -l {0}
        run: |
          conda info
          which python

      - name: Conda install FEniCS
        shell: bash -l {0}
        run: |
          conda config --set always_yes yes
          conda config --add channels conda-forge
          conda create -n fenicsproject -c conda-forge fenics
          conda activate fenicsproject
          which python
          python -c "from dolfin import *"
          python -c "from fenics import *"

      - name: Install dependencies
        shell: bash -l {0}
        run: |
          conda activate fenicsproject
          python -m pip install --upgrade pip
          python -m pip install pytest
          python -m pip install pytest-cov
          python -m pip install pytest-check
          python -m pip install coveralls
          python -m pip install fdm
          python -m pip install git+https://github.com/dolfin-adjoint/pyadjoint.git@master
          python -m pip install git+https://github.com/IvanYashchuk/fecr.git@master

      # Julia Tasks
      - uses: julia-actions/setup-julia@v1
        with:
          version: 1.5
          arch: x64

      - name: Julia info
        shell: bash -l {0}
        run: |
          julia -e 'using InteractiveUtils; versioninfo()'

      - uses: actions/cache@v2
        env:
          cache-name: cache-artifacts
        with:
          path: ~/.julia/artifacts
          key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-test-${{ env.cache-name }}-
            ${{ runner.os }}-test-
            ${{ runner.os }}-

      - uses: julia-actions/julia-buildpkg@v1
        env:
          PYTHON: /usr/share/miniconda/envs/fenicsproject/bin/python # this sets the Python binary directly to build PyCall

      # - uses: julia-actions/julia-runtest@v1
      - name: Run Julia tests
        shell: bash -l {0}
        run: |
          conda activate fenicsproject
          julia --color=yes --check-bounds=yes --project='@.' -e 'using Pkg; Pkg.test(coverage=true)'

      - uses: julia-actions/julia-processcoverage@v1
      - uses: codecov/codecov-action@v1
        with:
          file: lcov.info
